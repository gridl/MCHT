% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/StatisticalFunctions.R
\name{pval}
\alias{pval}
\title{Compute \eqn{p}-Value For a Test Statistic}
\usage{
pval(S, sample_S, alternative = NULL, unif_gen = NULL)
}
\arguments{
\item{S}{The value of the test statistic}

\item{sample_S}{Simulated values of the}

\item{alternative}{A string specifying the alternative hypothesis, or
\code{NULL}}

\item{unif_gen}{If not \code{NULL}, the function generating
uniformly-distributed random variables for breaking ties; if
\code{NULL}, no tie breaking is done}
}
\value{
A number representing the \eqn{p}-value.
}
\description{
Compute the \eqn{p}-value of a test statistic for Monte Carlo tests.
}
\details{
Let \eqn{S} be a test statistic and \eqn{S_i} be simulated values of that
test statistic under the null hypothesis, with \eqn{1 \leq i \leq N}. If
\code{unif_gen} is not \code{NULL}, this function computes \eqn{p}-values via

\deqn{p = \hat{p} = \frac{1}{N}\sum_{i = 1}^{N} \mathbb{1}_{\{(S, U_0) \leq
(S_i, U_i)\}}}

where \eqn{\mathbb{1}_{\left{S \in A\right}} = 1} if \eqn{S \in A} and is 0
otherwise, \eqn{U_i} are uniformly distributed random variables, and the
ordering over tuples is lexicographical ordering, as described by
\insertCite{dufour06;textual}{MCHT}.

If \code{unif_gen} is \code{NULL}, then the random variables are not
generated and not used to break ties.

This function is designed to handle an \code{alternative} parameter similar
to what appears in other \pkg{stats} functions like
\code{\link[stats]{t.test}}. If \code{alternative} is \code{"less"}, then
\eqn{p = \hat{p}}; if \code{alternative} is \code{"greater"}, then
\eqn{p = 1 - \hat{p}}; and if \code{alternative} is \code{"two.sided"}, then
\eqn{p = 2 \min(\hat{p}, 1 - \hat{p})}. Any other value raises an error.

The parameter \code{S} is \eqn{S}, and the vector \code{sample_S} is the
vector containing the values \eqn{S_i}.
}
\examples{
sample_S <- rnorm(10)
pval(1.01, sample_S)
pval(1.01, sample_S, alternative = "greater")
}
